{"version":3,"file":"avatar-89f1ae75.js","sources":["../../../src/components/avatar/avatar.tsx"],"sourcesContent":["import { FC } from \"react\";\n\ntype AvatarProps = {\n    /**\n     * The URL of the Avatar image\n     */\n    avatarUrl?: string\n    /**\n     * The displayname of the avatar user\n     */\n    displayname: string\n    /**\n     * Wether it is a DM or not\n     */\n    dm: boolean\n    /**\n     * Wether the user is online. Only used if dm is true.\n     */\n    online: boolean\n};\n\nconst Avatar: FC<AvatarProps> = ({ avatarUrl, displayname, dm = false, online = false }: AvatarProps) => {\n    if (avatarUrl) {\n        return (\n            <div className=\"flex relative min-w-[2rem] min-h-[2rem] justify-center items-center m-0 mr-3 text-xl rounded-full text-white\">\n                <img className=\"rounded-full w-8 h-8\" alt={displayname} src={avatarUrl} />\n                {\n                    dm ?\n                        (\n                            online ?\n                                <div className=\"bg-green-500 rounded-full w-3 h-3 absolute bottom-0 right-0\"></div> :\n                                <div className=\"bg-red-500 rounded-full w-3 h-3 absolute bottom-0 right-0\"></div>\n                        ) :\n                        <></>\n                }\n            </div>\n        );\n    }\n    return (\n        <div className=\"flex relative min-w-[2rem] min-h-[2rem] bg-orange-500 justify-center items-center m-0 mr-3 text-xl rounded-full text-white\">\n            {displayname[0].toUpperCase()}\n            {\n                dm ?\n                    (\n                        online ?\n                            <div className=\"bg-green-500 rounded-full w-3 h-3 absolute bottom-0 right-0\"></div> :\n                            <div className=\"bg-red-500 rounded-full w-3 h-3 absolute bottom-0 right-0\"></div>\n                    ) :\n                    <></>\n            }\n        </div>\n    );\n}\n\nexport default Avatar;"],"names":["Avatar","avatarUrl","displayname","dm","online","jsxs","jsx","Fragment"],"mappings":"8CAqBA,MAAAA,EAAA,CAAA,CAAA,UAAAC,EAAA,YAAAC,EAAA,GAAAC,EAAA,GAAA,OAAAC,EAAA,MACAH,EAEAI,EAAA,KAAA,MAAA,CAAA,UAAA,+GACA,SAAA,CAAAC,MAAA,OAAA,UAAA,uBAAA,IAAAJ,EAAA,IAAAD,EAAA,EAEAE,EAEAC,EACAE,EAAA,IAAA,MAAA,CAAA,UAAA,8DAAA,EACAA,EAAA,IAAA,MAAA,CAAA,UAAA,2DAAA,CAAA,EAEAA,EAAA,IAAAC,EAAA,SAAA,EAAA,CAEA,CAAA,CAAA,EAIAF,EAAA,KAAA,MAAA,CAAA,UAAA,6HACA,SAAA,CAAAH,EAAA,CAAA,EAAA,YAAA,EAEAC,EAEAC,EACAE,EAAA,IAAA,MAAA,CAAA,UAAA,8DAAA,EACAA,EAAA,IAAA,MAAA,CAAA,UAAA,2DAAA,CAAA,EAEAA,EAAA,IAAAC,EAAA,SAAA,EAAA,CAEA,CAAA,CAAA,EAIAP,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,CAAA,EAAA,YAAA,SAAA,MAAA,CAAA,GAAA,CAAA,aAAA,CAAA,MAAA,QAAA,SAAA,EAAA,EAAA,SAAA,GAAA,OAAA,CAAA,KAAA,SAAA,EAAA,YAAA,0BAAA,EAAA,OAAA,CAAA,aAAA,CAAA,MAAA,QAAA,SAAA,EAAA,EAAA,SAAA,GAAA,OAAA,CAAA,KAAA,SAAA,EAAA,YAAA,qDAAA,EAAA,UAAA,CAAA,SAAA,GAAA,OAAA,CAAA,KAAA,QAAA,EAAA,YAAA,6BAAA,EAAA,YAAA,CAAA,SAAA,GAAA,OAAA,CAAA,KAAA,QAAA,EAAA,YAAA,sCAAA"}