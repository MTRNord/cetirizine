{"version":3,"file":"MainPage.stories-8152b422.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/send.js","../../../node_modules/lucide-react/dist/esm/icons/settings.js","../../../node_modules/linkifyjs/dist/linkify.es.js","../../../node_modules/linkify-react/dist/linkify-react.es.js","../../../node_modules/dompurify/dist/purify.es.js","../../../src/components/events/messageEvent.tsx","../../../src/components/events/unknownEvent.tsx","../../../src/components/events/memberEvent.tsx","../../../src/pages/MainPage.tsx"],"sourcesContent":["/**\n * lucide-react v0.171.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Send = createLucideIcon(\"Send\", [\n  [\"line\", { x1: \"22\", x2: \"11\", y1: \"2\", y2: \"13\", key: \"2qtwb\" }],\n  [\"polygon\", { points: \"22 2 15 22 11 13 2 9 22 2\", key: \"12uapv\" }]\n]);\n\nexport { Send as default };\n//# sourceMappingURL=send.js.map\n","/**\n * lucide-react v0.171.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Settings = createLucideIcon(\"Settings\", [\n  [\n    \"path\",\n    {\n      d: \"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\",\n      key: \"1qme2f\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Settings as default };\n//# sourceMappingURL=settings.js.map\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3barth4b0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re2s2c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y0eats7k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking0channel11l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t0isalat7u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0at2delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d0network8tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0eles2s3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster5ia3d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0cys3drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7serati6ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic3tual5v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rthwesternmutual14on4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cher3ks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w0time7i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0channel7ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u0elos6wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5تصالات6رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\nconst OPENBRACE = 'OPENBRACE'; // {\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, CLOSEANGLEBRACKET, CLOSEBRACE, CLOSEBRACKET, CLOSEPAREN, COLON, COMMA, DOT, EXCLAMATION, OPENANGLEBRACKET, OPENBRACE, OPENBRACKET, OPENPAREN, QUERY, QUOTE, SEMI];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, CLOSEBRACE, DOLLAR, EQUALS, HYPHEN, OPENBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port numner\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n\n  // URL, followed by an opening bracket\n  const UrlOpenbrace = tt(Url$1, OPENBRACE); // URL followed by {\n  const UrlOpenbracket = tt(Url$1, OPENBRACKET); // URL followed by [\n  const UrlOpenanglebracket = tt(Url$1, OPENANGLEBRACKET); // URL followed by <\n  const UrlOpenparen = tt(Url$1, OPENPAREN); // URL followed by (\n\n  tt(UrlNonaccept, OPENBRACE, UrlOpenbrace);\n  tt(UrlNonaccept, OPENBRACKET, UrlOpenbracket);\n  tt(UrlNonaccept, OPENANGLEBRACKET, UrlOpenanglebracket);\n  tt(UrlNonaccept, OPENPAREN, UrlOpenparen);\n\n  // Closing bracket component. This character WILL be included in the URL\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracket, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracket, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparen, CLOSEPAREN, Url$1);\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n\n  // URL that beings with an opening bracket, followed by a symbols.\n  // Note that the final state can still be `UrlOpenbrace` (if the URL only\n  // has a single opening bracket for some reason).\n  const UrlOpenbraceQ = makeState(Url); // URL followed by { and some symbols that the URL can end it\n  const UrlOpenbracketQ = makeState(Url); // URL followed by [ and some symbols that the URL can end it\n  const UrlOpenanglebracketQ = makeState(Url); // URL followed by < and some symbols that the URL can end it\n  const UrlOpenparenQ = makeState(Url); // URL followed by ( and some symbols that the URL can end it\n  ta(UrlOpenbrace, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracket, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracket, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparen, qsAccepting, UrlOpenparenQ);\n  const UrlOpenbraceSyms = makeState(); // UrlOpenbrace followed by some symbols it cannot end it\n  const UrlOpenbracketSyms = makeState(); // UrlOpenbracketQ followed by some symbols it cannot end it\n  const UrlOpenanglebracketSyms = makeState(); // UrlOpenanglebracketQ followed by some symbols it cannot end it\n  const UrlOpenparenSyms = makeState(); // UrlOpenparenQ followed by some symbols it cannot end it\n  ta(UrlOpenbrace, qsNonAccepting);\n  ta(UrlOpenbracket, qsNonAccepting);\n  ta(UrlOpenanglebracket, qsNonAccepting);\n  ta(UrlOpenparen, qsNonAccepting);\n\n  // URL that begins with an opening bracket, followed by some symbols\n  ta(UrlOpenbraceQ, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceQ, qsNonAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsNonAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsNonAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsNonAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketSyms, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenSyms, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsNonAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsNonAccepting, UrlOpenbracketSyms);\n  ta(UrlOpenanglebracketSyms, qsNonAccepting, UrlOpenanglebracketSyms);\n  ta(UrlOpenparenSyms, qsNonAccepting, UrlOpenparenSyms);\n\n  // Close brace/bracket to become regular URL\n  tt(UrlOpenbracketQ, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketQ, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenQ, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceQ, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracketSyms, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketSyms, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenSyms, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceSyms, CLOSEPAREN, Url$1);\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error('linkifyjs: incorrect scheme format.\\n 1. Must only contain digits, lowercase ASCII letters or \"-\"\\n 2. Cannot start or end with \"-\"\\n 3. \"-\" cannot repeat');\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n*/\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n","import * as React from 'react';\nimport { Options, options, tokenize } from 'linkifyjs';\n\n/**\n * Given a string, converts to an array of valid React components\n * (which may include strings)\n * @param {string} str\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactNodeArray}\n */\nfunction stringToElements(str, opts, meta) {\n  const tokens = tokenize(str);\n  const elements = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && opts.get('nl2br')) {\n      const key = `__linkify-el-${meta.elementId++}`;\n      elements.push(React.createElement('br', {\n        key\n      }));\n    } else if (!token.isLink || !opts.check(token)) {\n      // Regular text\n      elements.push(token.toString());\n    } else {\n      let rendered = opts.render(token);\n      if (!('key' in rendered.props)) {\n        // Ensure generated element has unique key\n        const key = `__linkify-el-${meta.elementId++}`;\n        const props = options.assign({\n          key\n        }, rendered.props);\n        rendered = React.cloneElement(rendered, props);\n      }\n      elements.push(rendered);\n    }\n  }\n  return elements;\n}\n\n// Recursively linkify the contents of the given React Element instance\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {React.ReactElement<P, T>} element\n * @param {Options} opts\n * @param {{ [elementId: string]: number }} meta\n * @returns {React.ReactElement<P, T>}\n */\nfunction linkifyReactElement(element, opts, meta) {\n  if (React.Children.count(element.props.children) === 0) {\n    // No need to clone if the element had no children\n    return element;\n  }\n  const children = [];\n  React.Children.forEach(element.props.children, child => {\n    if (typeof child === 'string') {\n      // ensure that we always generate unique element IDs for keys\n      children.push.apply(children, stringToElements(child, opts, meta));\n    } else if (React.isValidElement(child)) {\n      if (typeof child.type === 'string' && opts.ignoreTags.indexOf(child.type.toUpperCase()) >= 0) {\n        // Don't linkify this element\n        children.push(child);\n      } else {\n        children.push(linkifyReactElement(child, opts, meta));\n      }\n    } else {\n      // Unknown element type, just push\n      children.push(child);\n    }\n  });\n\n  // Set a default unique key, copy over remaining props\n  const key = `__linkify-el-${meta.elementId++}`;\n  const newProps = options.assign({\n    key\n  }, element.props);\n  return React.cloneElement(element, newProps, children);\n}\n\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {P & { as?: T, tagName?: T, options?: import('linkifyjs').Opts, children?: React.ReactNode}} props\n * @returns {React.ReactElement<P, T>}\n */\nconst Linkify = props => {\n  // Copy over all non-linkify-specific props\n  let linkId = 0;\n  const defaultLinkRender = _ref => {\n    let {\n      tagName,\n      attributes,\n      content\n    } = _ref;\n    attributes.key = `__linkify-lnk-${linkId++}`;\n    if (attributes.class) {\n      attributes.className = attributes.class;\n      delete attributes.class;\n    }\n    return React.createElement(tagName, attributes, content);\n  };\n  const newProps = {\n    key: '__linkify-wrapper'\n  };\n  for (const prop in props) {\n    if (prop !== 'options' && prop !== 'as' && prop !== 'tagName' && prop !== 'children') {\n      newProps[prop] = props[prop];\n    }\n  }\n  const opts = new Options(props.options, defaultLinkRender);\n  const as = props.as || props.tagName || React.Fragment || 'span';\n  const children = props.children;\n  const element = React.createElement(as, newProps, children);\n  return linkifyReactElement(element, opts, {\n    elementId: 0\n  });\n};\n\nexport { Linkify as default };\n","/*! @license DOMPurify 3.0.2 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.2/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\n\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n/* Add properties to a lookup table */\n\nfunction addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n\n  while (l--) {\n    let element = array[l];\n\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n/* Shallow clone an object */\n\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\n\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\n\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\n\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME\n});\n\nconst getGlobal = () => typeof window === 'undefined' ? null : window;\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\n\n\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  } // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n\n\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  const DOMPurify = root => createDOMPurify(root);\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n\n\n  DOMPurify.version = '3.0.2';\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n  let {\n    document\n  } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined';\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n\n  let SAFE_FOR_TEMPLATES = false;\n  /* Decide if document with <html>... should be returned */\n\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  /* Parsing of strict XHTML documents */\n\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n  /* Keep a reference to config to pass to hooks */\n\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n\n\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n\n\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n\n\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...text]);\n      ALLOWED_ATTR = [];\n\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n\n\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n\n\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    } // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n\n\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n\n  const ALL_SVG_TAGS = addToSet({}, svg$1);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n  const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      } // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n\n\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      } // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n\n\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      } // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n\n\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      } // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n\n\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      } // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n\n\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    } // For XHTML and XML documents that support custom namespaces\n\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    } // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n\n\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n\n\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n\n\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {// Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n\n\n  const _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n\n\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n\n\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'object' ? object instanceof Node : object && typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n\n\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n\n\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeElements', currentNode, null);\n    /* Check if element is clobbered or can clobber */\n\n\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Now let's check the element's type and name */\n\n\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n\n\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n\n\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n      }\n      /* Keep content except for bad-listed elements */\n\n\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n\n\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Make sure that older browsers don't get noscript mXSS */\n\n\n    if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n\n\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (!value) ; else {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n\n\n  const _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n\n\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n\n    while (l--) {\n      attr = attributes[l];\n      const {\n        name,\n        namespaceURI\n      } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n      /* Execute a hook if present */\n\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n\n\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n\n\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n\n\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n      /* Is `value` valid for this attribute? */\n\n\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n\n\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Handle attributes that require Trusted Types */\n\n\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n\n\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n\n\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode;\n\n    const shadowIterator = _createIterator(fragment);\n    /* Execute a hook if present */\n\n\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n      /* Sanitize tags and elements */\n\n\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n      /* Deep shadow DOM detected */\n\n\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(shadowNode);\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n\n\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n\n    IS_EMPTY_INPUT = !dirty;\n\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n\n\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n\n\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n\n\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n\n\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n\n\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n\n\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n\n\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n      /* Shadow DOM detected, sanitize it */\n\n\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(currentNode);\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n\n\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n\n\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n\n\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n\n    SET_CONFIG = true;\n  };\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n\n\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.js.map\n","import { memo } from \"react\";\nimport { IRoomEvent, isRoomMessageTextEvent } from \"../../app/sdk/api/apiTypes\";\nimport { FC } from \"react\";\nimport Avatar from \"../avatar/avatar\";\nimport { useRoom } from \"../../app/sdk/client\";\nimport Linkify from \"linkify-react\";\nimport DOMPurify from \"dompurify\";\n\ntype MessageEventProps = {\n    /**\n     * The event to render\n     */\n    event: IRoomEvent;\n    /**\n     * The roomID of the event to display\n     */\n    roomID?: string;\n    /**\n     * If the previous event was sent by the same user\n     */\n    hasPreviousEvent?: boolean;\n    /**\n     * Reactions to the event\n     */\n    reactions?: IRoomEvent[];\n};\n\nconst linkifyOptions = {\n    defaultProtocol: \"https\",\n    rel: \"noopener\",\n    target: \"_blank\",\n    className: \"text-blue-500 hover:text-blue-700 active:text-blue-700 visited:text-blue-500\"\n}\n\nconst MessageEvent: FC<MessageEventProps> = memo(({ event, roomID, hasPreviousEvent }) => {\n    const room = useRoom(roomID);\n\n    const renderCorrectMessage = (event: IRoomEvent) => {\n        if (isRoomMessageTextEvent(event)) {\n            if (event.content.format === \"org.matrix.custom.html\") {\n                const sanitized = DOMPurify.sanitize(event.content.formatted_body!, {\n                    ADD_TAGS: [\n                        \"font\",\n                        \"del\",\n                        \"h1\",\n                        \"h2\",\n                        \"h3\",\n                        \"h4\",\n                        \"h5\",\n                        \"h6\",\n                        \"blockquote\",\n                        \"p\",\n                        \"a\",\n                        \"ul\",\n                        \"ol\",\n                        \"sup\",\n                        \"sub\",\n                        \"li\",\n                        \"b\",\n                        \"i\",\n                        \"u\",\n                        \"strong\",\n                        \"em\",\n                        \"strike\",\n                        \"code\",\n                        \"hr\",\n                        \"br\",\n                        \"div\",\n                        \"table\",\n                        \"thead\",\n                        \"tbody\",\n                        \"tr\",\n                        \"th\",\n                        \"td\",\n                        \"caption\",\n                        \"pre\",\n                        \"span\",\n                        \"img\",\n                        \"details\",\n                        \"summary\"\n                    ]\n                })\n                // TODO: sanitize the attributes allowed by matrix spec\n\n                return (\n                    <div className={!hasPreviousEvent ? \"flex flex-row gap-4 p-2 pb-1 hover:bg-gray-200 rounded-md duration-200 ease-in-out items-start\" : \"flex flex-row p-2 pb-1 pt-0 hover:bg-gray-200 rounded-md duration-200 ease-in-out\"}>\n                        {!hasPreviousEvent && <Avatar\n                            displayname={room?.getMemberName(event.sender) || \"\"}\n                            avatarUrl={room?.getMemberAvatar(event.sender)}\n                            online={room?.isOnline() || false}\n                            dm={room?.isDM() || false}\n                        />}\n                        <div className={!hasPreviousEvent ? \"flex flex-col gap-1\" : \"ml-[3.7rem]\"}>\n                            {!hasPreviousEvent && <h2 className=\"text-sm font-medium text-red-500 whitespace-normal\">{room?.getMemberName(event.sender)}</h2>}\n                            {/* TODO: Fixme */}\n                            <p className=\"whitespace-normal text-black text-base font-normal\" dangerouslySetInnerHTML={{ __html: sanitized }}></p>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className={!hasPreviousEvent ? \"flex flex-row gap-4 p-2 pb-1 hover:bg-gray-200 rounded-md duration-200 ease-in-out items-start\" : \"flex flex-row p-2 pb-1 pt-0 hover:bg-gray-200 rounded-md duration-200 ease-in-out\"}>\n                        {!hasPreviousEvent && <Avatar\n                            displayname={room?.getMemberName(event.sender) || \"\"}\n                            avatarUrl={room?.getMemberAvatar(event.sender)}\n                            online={room?.isOnline() || false}\n                            dm={room?.isDM() || false}\n                        />}\n                        <div className={!hasPreviousEvent ? \"flex flex-col gap-1\" : \"ml-[3.7rem]\"}>\n                            {!hasPreviousEvent && <h2 className=\"text-sm font-medium text-red-500 whitespace-normal\">{room?.getMemberName(event.sender)}</h2>}\n                            <Linkify options={linkifyOptions} as='p' className=\"whitespace-normal text-black text-base font-normal\">{event.content.body}</Linkify>\n                        </div>\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <p>{event.content.body}</p>\n            )\n        }\n    }\n\n    return renderCorrectMessage(event);\n});\n\nexport default MessageEvent;","import { memo } from \"react\";\nimport { IRoomEvent } from \"../../app/sdk/api/apiTypes\";\nimport { FC } from \"react\";\n\ntype UnknownEventProps = {\n    /**\n     * The event to render\n     */\n    event: IRoomEvent;\n};\n\nconst UnknownEvent: FC<UnknownEventProps> = memo(({ event }) => {\n    return <p className=\"whitespace-break-spaces\">{JSON.stringify(event, null, 4)}</p>;\n});\n\nexport default UnknownEvent;","import { memo } from \"react\";\nimport { IRoomMemberEvent } from \"../../app/sdk/api/apiTypes\";\nimport { FC } from \"react\";\n\ntype MemberEventProps = {\n    /**\n     * The event to render\n     */\n    event: IRoomMemberEvent;\n};\n\nconst MemberEvent: FC<MemberEventProps> = memo(({ event }) => {\n    const renderCorrectMessage = (event: IRoomMemberEvent) => {\n        // TODO: Make sure we render avatar and name changes correctly\n\n        return <p className=\"p-2 hover:bg-gray-200 rounded-md duration-200 ease-in-out\">\n            {\n                event.content.displayname ?\n                    event.content.displayname :\n                    event.state_key\n            } {\n                event.content.membership === \"join\" ?\n                    \"joined the room\" :\n                    (\n                        event.content.membership === \"leave\" ?\n                            // TODO: Handle kick\n                            \"left the room\" :\n                            (\n                                event.content.membership === \"ban\" ?\n                                    \"was banned from the room by \" + event.sender :\n                                    (\n                                        event.content.membership === \"invite\" ?\n                                            \"was invited to the room by \" + event.sender :\n                                            (\n                                                event.content.membership === \"knock\" ?\n                                                    \"knocked on the room\" :\n                                                    \"changed their membership status to \" + event.content.membership\n                                            )\n                                    )\n                            )\n                    )\n            }\n        </p>\n    }\n\n    return renderCorrectMessage(event);\n});\n\nexport default MemberEvent;","import { Send, Settings } from 'lucide-react';\nimport Avatar from '../components/avatar/avatar';\nimport ChatInput from '../components/input/chat/input';\nimport RoomList, { Section } from '../components/roomList/roomList';\nimport './MainPage.scss';\nimport { useProfile, useRoom, useRooms, useSpaces } from '../app/sdk/client';\nimport { Room } from '../app/sdk/room';\nimport { FC, memo, useContext, useEffect, useRef, useState } from 'react';\nimport { MatrixContext } from '../app/sdk/client';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { $generateHtmlFromNodes } from '@lexical/html';\nimport { $convertToMarkdownString, TRANSFORMERS } from '@lexical/markdown';\nimport MessageEvent from '../components/events/messageEvent';\nimport UnknownEvent from '../components/events/unknownEvent';\nimport MemberEvent from '../components/events/memberEvent';\nimport { IRoomEvent, IRoomMemberEvent } from '../app/sdk/api/apiTypes';\nimport Linkify from 'linkify-react';\n\ntype ChatViewProps = {\n    /**\n     * The roomID of the room to display\n     * If the roomID is empty, the ChatView will be empty\n     * If the roomID is invalid, the ChatView will be empty\n     * If the roomID is valid, the ChatView will display the room\n     * If the roomID is valid, but the room is not joined, the ChatView will display a placeholder\n     * If the roomID is valid, but the room is not loaded, the ChatView will display a placeholder\n     */\n    roomID?: string\n    /**\n     * Ref of the Scroll Container\n     */\n    scrollRef: React.RefObject<HTMLDivElement>\n};\n\nconst ChatView: FC<ChatViewProps> = memo(({ roomID, scrollRef }) => {\n    const room = useRoom(decodeURIComponent(roomID || \"\"));\n    const events = room?.getEvents();\n    const { pathname } = useLocation();\n    useEffect(() => {\n        scrollRef.current?.scrollTo(0, scrollRef.current?.scrollHeight);\n    }, [pathname]);\n\n    // Render events based on the event type and content\n    const renderEvent = (event: IRoomEvent, previousEventIsFromSameSender: boolean, previousEventType: string, reactions: IRoomEvent[]) => {\n        switch (event.type) {\n            case \"m.room.message\":\n                return <MessageEvent reactions={reactions} event={event} roomID={roomID} key={event.event_id} hasPreviousEvent={previousEventIsFromSameSender && previousEventType === \"m.room.message\"} />\n            case \"m.room.member\":\n                return <MemberEvent event={event as IRoomMemberEvent} key={event.event_id} />\n            case \"m.room.redaction\":\n                return <></>;\n            default:\n                return <UnknownEvent event={event} key={event.event_id} />\n        }\n    }\n\n    const dedupedEvents = events?.filter((event, index, self) => {\n        return self.findIndex(e => e.event_id === event.event_id) === index;\n    });\n\n    // Map events to components but also tell components if the previous event was from the same sender and which type it was\n    const renderedEvents = dedupedEvents?.filter(event => event.type !== \"m.reaction\").map((event, index) => {\n        const previousEvent = dedupedEvents?.filter(event => event.type !== \"m.reaction\")[index - 1];\n        const previousEventIsFromSameSender = previousEvent?.sender === event.sender;\n        const previousEventType = previousEvent?.type;\n\n        // Make a list of events which are reactions for the current event we want to render\n        const reactions = dedupedEvents?.filter((e) => {\n            return e.type === \"m.reaction\" && e.content[\"m.relates_to\"].event_id === event.event_id;\n        });\n\n        return renderEvent(event, previousEventIsFromSameSender, previousEventType, reactions);\n    });\n    return <div className='max-w-[130ch] flex flex-col'>{renderedEvents}</div>;\n});\n\n\nconst MainPage = memo(() => {\n    const profile = useProfile();\n    const spacesWithRooms = useSpaces();\n    const rooms = useRooms();\n    const client = useContext(MatrixContext);\n    let params = useParams();\n    const room = useRoom(decodeURIComponent(params.roomIdOrAlias || \"\"));\n\n    const [_htmlMessage, setHtmlMessage] = useState<string>(\"\");\n    const [_plainMessage, setPlainMessage] = useState<string>(\"\");\n    const scrollRef = useRef<HTMLDivElement>(null);\n\n    // Filter toplevel spaces.\n    // A toplevel space is a space that is not a child of another space.\n    // We can not rely only on the parent. We need to check in both directions.\n    const toplevelSpaces = [...spacesWithRooms].filter(({ spaceRoom }) => {\n        const not_a_child = ![...spacesWithRooms].some(({ children: otherChildren }) => {\n            return [...otherChildren].some(room => room.roomID === spaceRoom.roomID);\n        });\n        // Also check if there are no parents set\n        const no_parents = spaceRoom.getSpaceParentIDs().length === 0;\n        return not_a_child && no_parents;\n    });\n\n    // Filter rooms which are not part of any space and are not a space.\n    // A room is not part of any space if it is not a child of any space.\n    // A room is not a space if it has not any space as parent.\n    const leftOverRooms = [...rooms].filter(room => {\n        const not_a_child = ![...spacesWithRooms].some(({ children }) => {\n            return [...children].some(otherRoom => otherRoom.roomID === room.roomID);\n        });\n        const no_parents = room.getSpaceParentIDs().length === 0;\n        const not_a_space = !room.isSpace();\n        return not_a_child && no_parents && not_a_space;\n    });\n\n    // Generate a list of sections.\n    // Each section apart from special toplevel ones is a space.\n    // Each space has a list of rooms and subsections.\n    // Each subsection has a list of rooms and subsections.\n    // Subsections can nest infinitely.\n    // Rooms are always within a section.\n    // A section represents a space.\n    // If a room is not within a space it is in the toplevel section \"Other\" which is at the end of the list.\n    // The toplevel section \"Other\" is always present.\n    // The toplevel section \"Other\" is always the last section.\n    const sections = toplevelSpaces.map(space => {\n        const rooms = [...space.children].filter(room => !room.isSpace()).map(room => {\n            return {\n                roomID: room.roomID,\n                displayname: room.getName(),\n                avatarUrl: room.getAvatarURL(),\n                dm: room.isDM(),\n                online: room.isOnline(),\n            }\n        });\n\n        const generateSubsections = (subspace: Room): Section | undefined => {\n            const subspaceMeta = [...spacesWithRooms].find(space => space.spaceRoom.roomID === subspace.roomID);\n            if (subspaceMeta) {\n                const rooms = [...subspaceMeta?.children].map(room => {\n                    return {\n                        roomID: room.roomID,\n                        displayname: room.getName(),\n                        avatarUrl: room.getAvatarURL(),\n                        dm: room.isDM(),\n                        online: room.isOnline(),\n                    }\n                });\n\n                return {\n                    sectionName: subspace.getName(),\n                    rooms: rooms,\n                    roomID: subspace.roomID,\n                    subsections: [...subspaceMeta?.children]\n                        .filter(room => room.isSpace()).map(generateSubsections)\n                        .filter(section => section !== undefined) as Section[],\n                }\n            }\n        }\n\n        // Its a little weird sicne there are no children attached to the room object. Only to spacesWithRooms.\n        // Each subsection can have further subsections and rooms.\n        return {\n            sectionName: space.spaceRoom.getName(),\n            rooms: rooms,\n            roomID: space.spaceRoom.roomID,\n            subsections: [...space.children]\n                .filter(room => room.isSpace())\n                .map(generateSubsections),\n        } as Section;\n    });\n\n    // Add the toplevel section \"Other\" to the end of the list.\n    const otherRooms = leftOverRooms.filter(room => !room.isSpace()).map(room => {\n        return {\n            roomID: room.roomID,\n            displayname: room.getName(),\n            avatarUrl: room.getAvatarURL(),\n            dm: room.isDM(),\n            online: room.isOnline(),\n        }\n    });\n\n    // Check and print if otherRooms has duplicates.\n    const otherRoomsIDs = otherRooms.map(room => room.roomID);\n    const otherRoomsDuplicates = otherRoomsIDs.filter((id, index) => otherRoomsIDs.indexOf(id) !== index);\n    if (otherRoomsDuplicates.length > 0) {\n        console.error('otherRooms has duplicates', otherRoomsDuplicates);\n    }\n\n    const linkifyOptions = {\n        defaultProtocol: \"https\",\n        rel: \"noopener\",\n        target: \"_blank\",\n        className: \"text-blue-500 hover:text-blue-700 active:text-blue-700 visited:text-blue-500\"\n    }\n\n    return <div className='flex flex-row gap-2 min-h-screen h-screen'>\n        <div className='flex flex-col bg-gradient-to-br from-slate-100 via-gray-200 to-orange-200 border-r-[1px] border-slate-300'>\n            <div className='flex flex-row gap-2 m-2 p-1 items-center border-b-2'>\n                <Avatar displayname={profile.displayname || client.mxid!} avatarUrl={profile?.avatar_url} dm={false} online={false} />\n                <div className='flex flex-row justify-between items-center w-full'>\n                    <span className='text-base font-semibold'>{profile?.displayname}</span>\n                    <Settings size={28} stroke='unset' className='stroke-slate-600 rounded-full hover:bg-slate-300 p-1 cursor-pointer' />\n                </div>\n            </div>\n            <RoomList sections={sections} rooms={otherRooms} />\n        </div>\n        {\n            room && <div className='flex-1 flex flex-col'>\n                <div className='pb-2 flex flex-row items-center border-b-2 mt-4 ml-2'>\n                    <Avatar displayname={room.getName()} avatarUrl={room.getAvatarURL()} dm={room.isDM()} online={room.isOnline()} />\n                    <div className='flex flex-row items-center'>\n                        <h1 className='text-black font-semibold text-lg flex-shrink-0'>{room.getName()}</h1>\n                        <Linkify options={linkifyOptions} as='p' className=\"ml-4 text-slate-700 font-normal text-base\">{room.getTopic()}</Linkify>\n                    </div>\n                </div>\n                <div ref={scrollRef} className='overflow-y-auto overflow-x-hidden scrollbarSmall mr-2 my-1 flex-1 w-full flex flex-col-reverse'>\n                    <ChatView roomID={params.roomIdOrAlias} scrollRef={scrollRef} />\n                </div>\n                <div className='flex flex-row items-end'>\n                    <ChatInput namespace='Editor' onChange={(editorState, editor) => {\n                        // Convert editor state to both html and markdown.\n                        // If there is no formatting then just use the plain text.\n                        editorState.read(() => {\n                            const html = $generateHtmlFromNodes(editor);\n                            // TODO: Make sure that we strip any non matrix stuff\n                            setHtmlMessage(html);\n                            console.log(html);\n                            const markdown = $convertToMarkdownString(TRANSFORMERS);\n                            setPlainMessage(markdown);\n                            console.log(markdown);\n                        });\n                        // TODO: we need some send button\n                    }} onError={(e) => console.error(e)} />\n                    <Send size={45} stroke='unset' className='stroke-slate-600 rounded m-4 hover:bg-slate-300 hover:stroke-slate-500 p-2 cursor-pointer' onClick={() => {\n                        // TODO: Sanitize the html and send message to room\n                        // TODO: encrypt if room is encrypted\n                    }} />\n                </div>\n            </div>\n        }\n    </div >\n})\n\nexport default MainPage;"],"names":["Send","createLucideIcon","Settings","encodedTlds","encodedUtlds","assign","target","properties","key","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","name","groups","addToGroups","t","flags","k","group","flagsForToken","result","c","State","token","input","state","nextState","i","regex","exactOnly","inputs","next","regexp","len","templateState","allFlags","ta","tr","ts","tt","WORD","UWORD","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL$1","OPENBRACE","OPENBRACKET","OPENANGLEBRACKET","OPENPAREN","CLOSEBRACE","CLOSEBRACKET","CLOSEANGLEBRACKET","CLOSEPAREN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","ASCII_LETTER","LETTER","EMOJI","DIGIT","SPACE","NL","EMOJI_VARIATION","EMOJI_JOINER","tlds","utlds","init$2","customSchemes","Start","decodeTlds","Num","Word","UWord","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","fastts","a","b","sch","run$1","start","str","iterable","stringToArray","charCount","tokens","cursor","charCursor","tokenLength","latestAccepting","sinceAccepts","charsSinceAccepts","index","first","second","char","defaultt","jr","encoded","words","stack","digits","popDigitCount","popCount","defaults","noop","Options","opts","defaultRender","o","ignoredTags","uppercaseIgnoredTags","ir","operator","isCallable","option","obj","val","options","MultiToken","value","truncate","formatted","protocol","href","formattedHref","tagName","content","attributes","className","rel","attrs","eventListeners","createTokenClass","type","props","Token","p","Email","Text","Nl","Url","makeState","arg","init$1","_ref","qsAccepting","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","UrlOpenbrace","UrlOpenbracket","UrlOpenanglebracket","UrlOpenparen","UrlOpenbraceQ","UrlOpenbracketQ","UrlOpenanglebracketQ","UrlOpenparenQ","UrlOpenbraceSyms","UrlOpenbracketSyms","UrlOpenanglebracketSyms","UrlOpenparenSyms","run","multis","textTokens","secondState","multiLength","initMultiToken","Multi","subtokens","startIdx","endIdx","INIT","init","tokenize","stringToElements","meta","elements","React.createElement","rendered","React.cloneElement","linkifyReactElement","element","React.Children","children","child","React.isValidElement","newProps","Linkify","linkId","defaultLinkRender","prop","as","React.Fragment","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","fun","thisValue","args","x","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","l","lcElement","clone","object","newObject","property","lookupGetter","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","getGlobal","_createTrustedTypesPolicy","trustedTypes","document","suffix","ATTR_NAME","policyName","scriptUrl","createDOMPurify","window","DOMPurify","root","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","parentTagName","_forceRemove","node","_removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","body","_createIterator","_isClobbered","elm","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","_basicCustomElementTest","parentNode","childNodes","childCount","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","namespaceURI","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","tag","hookFunction","purify","linkifyOptions","MessageEvent","memo","event","roomID","hasPreviousEvent","room","useRoom","isRoomMessageTextEvent","sanitized","jsx","Avatar","UnknownEvent","MemberEvent","jsxs","ChatView","scrollRef","events","pathname","useLocation","useEffect","renderEvent","previousEventIsFromSameSender","previousEventType","reactions","Fragment","dedupedEvents","self","e","renderedEvents","previousEvent","MainPage","profile","useProfile","spacesWithRooms","useSpaces","rooms","useRooms","client","useContext","MatrixContext","params","useParams","_htmlMessage","setHtmlMessage","useState","_plainMessage","setPlainMessage","useRef","toplevelSpaces","spaceRoom","not_a_child","otherChildren","no_parents","leftOverRooms","otherRoom","not_a_space","sections","space","generateSubsections","subspace","subspaceMeta","section","otherRooms","otherRoomsIDs","otherRoomsDuplicates","id","RoomList","ChatInput","editorState","editor","$generateHtmlFromNodes","markdown","$convertToMarkdownString","TRANSFORMERS"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}