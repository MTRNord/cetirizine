{"version":3,"file":"input-7f3d13cb.js","sources":["../../../src/components/input/basic/input.tsx"],"sourcesContent":["import { ChangeEvent, FC, memo } from 'react';\n\ntype InputProps = {\n    /**\n     * The Placeholder text\n     */\n    placeholder: string\n    /**\n     * If it is a password input\n     */\n    password?: boolean\n    /**\n     * If input should be autofocused\n     */\n    autoFocus?: boolean\n    /**\n     * The value of the input field\n     */\n    value: string\n    /**\n     * If the input is readonly\n     */\n    readonly: boolean\n    /**\n     * Handler for the onChange event\n     */\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Input: FC<InputProps> = ({ placeholder, password = false, autoFocus = false, value, readonly, onChange }: InputProps) => {\n    return (\n        <input\n            disabled={readonly}\n            className='form-input rounded-lg disabled:bg-slate-200 disabled:cursor-not-allowed transition-colors ease-in-out delay-150'\n            value={value}\n            type={password ? \"password\" : \"text\"}\n            autoFocus={autoFocus}\n            placeholder={placeholder}\n            onChange={onChange}\n        />\n    );\n}\nexport default memo(Input);"],"names":["Input","placeholder","password","autoFocus","value","readonly","onChange","jsx","Input$1","memo"],"mappings":"sFA6BA,MAAAA,EAAA,CAAA,CAAA,YAAAC,EAAA,SAAAC,EAAA,GAAA,UAAAC,EAAA,GAAA,MAAAC,EAAA,SAAAC,EAAA,SAAAC,KACIC,EAAA,IACI,QAAC,CAAA,SAAAF,EACa,UAAA,kHACA,MAAAD,EACV,KAAAF,EAAA,WAAA,OAC8B,UAAAC,EAC9B,YAAAF,EACA,SAAAK,CACA,CAAA,EAIZE,EAAAC,EAAA,KAAAT,CAAA"}