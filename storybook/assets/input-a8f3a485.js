import{j as i}from"./jsx-runtime-ccada58e.js";import{r as u}from"./index-f1f749bf.js";const e=({placeholder:t,password:n=!1,autoFocus:a=!1,value:s,readonly:r,onChange:o})=>i.jsx("input",{disabled:r,className:"text-base form-input rounded-lg disabled:bg-slate-200 disabled:cursor-not-allowed transition-colors ease-in-out delay-150",value:s,type:n?"password":"text",autoFocus:a,placeholder:t,onChange:o}),p=u.memo(e);e.__docgenInfo={description:"",methods:[],displayName:"Input",props:{password:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If it is a password input"},autoFocus:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"If input should be autofocused"},placeholder:{required:!0,tsType:{name:"string"},description:"The Placeholder text"},value:{required:!0,tsType:{name:"string"},description:"The value of the input field"},readonly:{required:!0,tsType:{name:"boolean"},description:"If the input is readonly"},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(e: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{name:"e",type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"}}],return:{name:"void"}}},description:"Handler for the onChange event"}}};export{p as I};
//# sourceMappingURL=input-a8f3a485.js.map
