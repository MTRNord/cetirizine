{"version":3,"file":"button-d4d6b1a0.js","sources":["../../../src/components/button/button.tsx"],"sourcesContent":["import { FC, memo } from \"react\";\nimport \"./button.scss\";\n\ntype ButtonProps = {\n    /**\n     * The button type\n     */\n    type?: \"button\" | \"submit\" | \"reset\";\n    /**\n     * The button style\n     */\n    style?: \"primary\" | \"secondary\" | \"abort\";\n    /**\n     * The button onClick handler\n     */\n    onClick?: () => void;\n    /**\n     * The button Label\n     */\n    children: string\n\n    /**\n     * If the button is readonly\n     */\n    readonly: boolean\n};\n\nconst Button: FC<ButtonProps> = ({ type = \"button\", style = \"primary\", onClick, children, readonly }: ButtonProps) => {\n    if (style === \"secondary\") {\n        return <button disabled={readonly} onClick={onClick} className=\"button bg-orange-400 hover:bg-orange-500 ease-out duration-150 disabled:bg-slate-200 disabled:cursor-not-allowed\" type={type}>{children}</button>;\n    } else if (style === \"abort\") {\n        return <button disabled={readonly} onClick={onClick} className=\"button bg-red-400 hover:bg-red-500 ease-out duration-150 disabled:bg-slate-200 disabled:cursor-not-allowed\" type={type}>{children}</button>;\n    } else {\n        return <button disabled={readonly} onClick={onClick} className=\"button bg-green-400 hover:bg-green-500 ease-out duration-150 disabled:bg-slate-200 disabled:cursor-not-allowed\" type={type}>{children}</button>;\n    }\n}\nexport default memo(Button);"],"names":["Button","type","style","onClick","children","readonly","jsx","Button$1","memo"],"mappings":"sFA2BA,MAAAA,EAAA,CAAA,CAAA,KAAAC,EAAA,SAAA,MAAAC,EAAA,UAAA,QAAAC,EAAA,SAAAC,EAAA,SAAAC,KACIH,IAAA,YACII,MAAA,SAAA,CAAA,SAAAD,EAAA,QAAAF,EAAA,UAAA,mHAAA,KAAAF,EAAA,SAAAG,CAAA,CAAA,EAAwMF,IAAA,QAExMI,MAAA,SAAA,CAAA,SAAAD,EAAA,QAAAF,EAAA,UAAA,6GAAA,KAAAF,EAAA,SAAAG,CAAA,CAAA,EAEAE,MAAA,SAAA,CAAA,SAAAD,EAAA,QAAAF,EAAA,UAAA,iHAAA,KAAAF,EAAA,SAAAG,CAAA,CAAA,EAGRG,EAAAC,EAAA,KAAAR,CAAA"}