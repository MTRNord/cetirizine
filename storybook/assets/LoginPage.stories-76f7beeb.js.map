{"version":3,"file":"LoginPage.stories-76f7beeb.js","sources":["../../../node_modules/react-redux/es/hooks/useStore.js","../../../node_modules/react-redux/es/hooks/useDispatch.js","../../../src/app/hooks.ts","../../../src/components/login/login.tsx","../../../src/pages/LoginPage.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useState } from 'react';\nimport { ApiActions } from '../../app/api/api';\nimport { getLoginError, setBaseUrl } from '../../app/api/reducers';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { RootState } from '../../app/store';\nimport Button from '../button/button';\nimport Header from '../header/header';\nimport Input from '../input/basic/input';\n\nexport function Login() {\n    const loginError = useAppSelector((state: RootState) => getLoginError(state));\n    const [homeserver, setHomeserver] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useAppDispatch();\n\n    return (\n        <div className=\"flex flex-col rounded-md shadow p-4 bg-white gap-2\">\n            <Header>Login</Header>\n            {loginError ? <h2 className='text-red-500 font-normal text-sm'>{loginError}</h2> : <></>}\n            <Input\n                value={homeserver}\n                autoFocus={true}\n                placeholder=\"Homeserver\"\n                onChange={e => { setHomeserver(e.target.value); dispatch(setBaseUrl(e.target.value)) }}\n            />\n            <Input\n                value={username}\n                placeholder=\"Username\"\n                onChange={e => setUsername(e.target.value)}\n            />\n            <Input\n                value={password}\n                password={true}\n                placeholder=\"Password\"\n                onChange={e => setPassword(e.target.value)}\n            />\n            <Button\n                style=\"primary\"\n                type=\"button\"\n                onClick={() => dispatch({ type: ApiActions.LOGIN })}\n            >\n                Login\n            </Button>\n        </div>\n    );\n}","import './LoginPage.scss';\nimport { Login } from '../components/login/login';\n\nfunction LoginPage() {\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-img\">\n            <Login />\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"names":["createStoreHook","context","ReactReduxContext","useReduxContext","useDefaultReduxContext","useContext","store","useStore","createDispatchHook","useDefaultStore","useDispatch","useAppDispatch","useAppSelector","useSelector","Login","loginError","state","getLoginError","homeserver","setHomeserver","useState","username","setUsername","password","setPassword","dispatch","jsxs","jsx","Header","Fragment","Input","e","setBaseUrl","Button","ApiActions","LoginPage"],"mappings":"8WAUO,SAASA,EAAgBC,EAAUC,EAAmB,CAC3D,MAAMC,EACNF,IAAYC,EAAoBE,EAAyB,IAAMC,EAAU,WAACJ,CAAO,EACjF,OAAO,UAAoB,CACzB,KAAM,CACJ,MAAAK,CACD,EAAGH,EAAe,EAEnB,OAAOG,CACX,CACA,CAiBO,MAAMC,EAAwBP,EAAiB,EC5B/C,SAASQ,EAAmBP,EAAUC,EAAmB,CAC9D,MAAMK,EACNN,IAAYC,EAAoBO,EAAkBT,EAAgBC,CAAO,EACzE,OAAO,UAAuB,CAG5B,OAFcM,IAED,QACjB,CACA,CAuBO,MAAMG,EAA2BF,EAAoB,ECpC/C,MAAAG,EAAiB,IAAMD,IACvBE,EAAkDC,ECIxD,SAASC,GAAQ,CACpB,MAAMC,EAAaH,EAAgBI,GAAqBC,EAAcD,CAAK,CAAC,EACtE,CAACE,EAAYC,CAAa,EAAIC,WAAS,EAAE,EACzC,CAACC,EAAUC,CAAW,EAAIF,WAAS,EAAE,EACrC,CAACG,EAAUC,CAAW,EAAIJ,WAAS,EAAE,EACrCK,EAAWd,IAGb,OAAAe,EAAA,KAAC,MAAI,CAAA,UAAU,qDACX,SAAA,CAAAC,EAAAA,IAACC,GAAO,SAAK,OAAA,CAAA,EACZb,EAAcY,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAoC,SAAAZ,EAAW,EAAUY,MAAAE,EAAAA,SAAA,CAAA,CAAA,EACrFF,EAAA,IAACG,EAAA,CACG,MAAOZ,EACP,UAAW,GACX,YAAY,aACZ,SAAea,GAAA,CAAgBZ,EAAAY,EAAE,OAAO,KAAK,EAAGN,EAASO,EAAWD,EAAE,OAAO,KAAK,CAAC,CAAE,CAAA,CACzF,EACAJ,EAAA,IAACG,EAAA,CACG,MAAOT,EACP,YAAY,WACZ,SAAUU,GAAKT,EAAYS,EAAE,OAAO,KAAK,CAAA,CAC7C,EACAJ,EAAA,IAACG,EAAA,CACG,MAAOP,EACP,SAAU,GACV,YAAY,WACZ,SAAUQ,GAAKP,EAAYO,EAAE,OAAO,KAAK,CAAA,CAC7C,EACAJ,EAAA,IAACM,EAAA,CACG,MAAM,UACN,KAAK,SACL,QAAS,IAAMR,EAAS,CAAE,KAAMS,EAAW,MAAO,EACrD,SAAA,OAAA,CAED,CACJ,CAAA,CAAA,CAER,CC3CA,SAASC,GAAY,CACjB,aACK,MAAI,CAAA,UAAU,gEACX,SAAAR,EAAAA,IAACb,IAAM,CACX,CAAA,CAER;;;;","x_google_ignoreList":[0,1]}