{"version":3,"file":"MainPage.stories-7eb441a9.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/settings.js","../../../src/pages/MainPage.tsx"],"sourcesContent":["/**\n * lucide-react v0.171.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Settings = createLucideIcon(\"Settings\", [\n  [\n    \"path\",\n    {\n      d: \"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\",\n      key: \"1qme2f\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Settings as default };\n//# sourceMappingURL=settings.js.map\n","import { Settings } from 'lucide-react';\nimport Avatar from '../components/avatar/avatar';\nimport ChatInput from '../components/input/chat/input';\nimport RoomList, { Section } from '../components/roomList/roomList';\nimport './MainPage.scss';\nimport { useProfile, useRooms, useSpaces } from '../app/sdk/client';\nimport { Room } from '../app/sdk/room';\nexport default function MainPage() {\n    const profile = useProfile();\n    const spacesWithRooms = useSpaces();\n    const rooms = useRooms();\n\n    // Generate a list of sections.\n    // Each section apart from special toplevel ones is a space.\n    // Each space has a list of rooms and subsections.\n    // Each subsection has a list of rooms and subsections.\n    // Subsections can nest infinitely.\n    // Rooms are always within a section.\n    // A section represents a space.\n    // If a room is not within a space it is in the toplevel section \"Other\" which is at the end of the list.\n    // The toplevel section \"Other\" is always present.\n    // The toplevel section \"Other\" is always the last section.\n    const sections = [...spacesWithRooms].map(space => {\n        const rooms = [...space.children].filter(room => !room.isSpace()).map(room => {\n            return {\n                roomID: room.roomID,\n                displayname: room.getName(),\n                avatarUrl: room.getAvatarURL(),\n                dm: room.isDM(),\n                online: room.isOnline(),\n            }\n        });\n\n        const generateSubsections = (subspace: Room): Section | undefined => {\n            const subspaceMeta = [...spacesWithRooms].find(space => space.spaceRoom.roomID === subspace.roomID);\n            if (subspaceMeta) {\n                const rooms = [...subspaceMeta?.children].map(room => {\n                    return {\n                        roomID: room.roomID,\n                        displayname: room.getName(),\n                        avatarUrl: room.getAvatarURL(),\n                        dm: room.isDM(),\n                        online: room.isOnline(),\n                    }\n                });\n\n                return {\n                    sectionName: subspace.getName(),\n                    rooms: rooms,\n                    roomID: subspace.roomID,\n                    subsections: [...subspaceMeta?.children]\n                        .filter(room => room.isSpace()).map(generateSubsections)\n                        .filter(section => section !== undefined) as Section[],\n                }\n            }\n        }\n\n        // Its a little weird sicne there are no children attached to the room object. Only to spacesWithRooms.\n        // Each subsection can have further subsections and rooms.\n        return {\n            sectionName: space.spaceRoom.getName(),\n            rooms: rooms,\n            roomID: space.spaceRoom.roomID,\n            subsections: [...space.children]\n                .filter(room => room.isSpace())\n                .map(generateSubsections),\n        } as Section;\n    });\n\n    // Add the toplevel section \"Other\" to the end of the list.\n    const otherRooms = [...rooms].filter(room => !room.isSpace()).map(room => {\n        return {\n            roomID: room.roomID,\n            displayname: room.getName(),\n            avatarUrl: room.getAvatarURL(),\n            dm: room.isDM(),\n            online: room.isOnline(),\n        }\n    });\n\n    return <div className='flex flex-row w-full gap-2 min-h-screen h-screen'>\n        < div className='flex flex-col bg-gradient-to-br from-slate-100 via-gray-200 to-orange-200 border-r-[1px] border-slate-300' >\n            <div className='flex flex-row gap-2 m-2 p-1  items-center border-b-2'>\n                {profile?.avatar_url && <Avatar displayname='Test' avatarUrl={profile?.avatar_url} dm={false} online={false} />}\n                <div className='flex flex-row justify-between items-center w-full'>\n                    <span className='text-base font-semibold'>{profile?.displayname}</span>\n                    <Settings size={28} stroke='unset' className='stroke-slate-600 rounded-full hover:bg-slate-300 p-1 cursor-pointer' />\n                </div>\n            </div>\n            <RoomList sections={sections} rooms={otherRooms} />\n        </div >\n        <div className='flex-1 flex flex-col'>\n            <div className='flex-1'>\n            </div>\n            <ChatInput namespace='Editor' onChange={() => { }} onError={(e) => console.error(e)} />\n        </div>\n    </div >\n}"],"names":["Settings","createLucideIcon","MainPage","profile","useProfile","spacesWithRooms","useSpaces","rooms","useRooms","sections","space","room","generateSubsections","subspace","subspaceMeta","section","otherRooms","jsxs","jsx","Avatar","RoomList","ChatInput"],"mappings":"kZAMA,MAAMA,EAAWC,EAAiB,WAAY,CAC5C,CACE,OACA,CACE,EAAG,wjBACH,IAAK,QACN,CACF,EACD,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,IAAK,IAAK,SAAU,CAC1D,CAAC,ECRD,SAAAC,GAAA,CACA,MAAAC,EAAAC,IACAC,EAAAC,IACAC,EAAAC,IAYAC,EAAA,CAAA,GAAAJ,CAAA,EAAA,IAAAK,GAAA,CACA,MAAAH,EAAA,CAAA,GAAAG,EAAA,QAAA,EAAA,OAAAC,GAAA,CAAAA,EAAA,QAAA,CAAA,EAAA,IAAAA,IACA,CACA,OAAAA,EAAA,OACA,YAAAA,EAAA,QAAA,EACA,UAAAA,EAAA,aAAA,EACA,GAAAA,EAAA,KAAA,EACA,OAAAA,EAAA,SAAA,CAAA,EAEA,EAEAC,EAAAC,GAAA,CACA,MAAAC,EAAA,CAAA,GAAAT,CAAA,EAAA,KAAAK,GAAAA,EAAA,UAAA,SAAAG,EAAA,MAAA,EACA,GAAAC,EAAA,CACA,MAAAP,EAAA,CAAA,GAAAO,GAAA,QAAA,EAAA,IAAAH,IACA,CACA,OAAAA,EAAA,OACA,YAAAA,EAAA,QAAA,EACA,UAAAA,EAAA,aAAA,EACA,GAAAA,EAAA,KAAA,EACA,OAAAA,EAAA,SAAA,CAAA,EAEA,EAEA,MAAA,CACA,YAAAE,EAAA,QAAA,EACA,MAAAN,EACA,OAAAM,EAAA,OACA,YAAA,CAAA,GAAAC,GAAA,QAAA,EACA,OAAAH,GAAAA,EAAA,QAAA,CAAA,EAAA,IAAAC,CAAA,EACA,OAAAG,GAAAA,IAAA,MAAA,CAAA,EAEA,EAKA,MAAA,CACA,YAAAL,EAAA,UAAA,QAAA,EACA,MAAAH,EACA,OAAAG,EAAA,UAAA,OACA,YAAA,CAAA,GAAAA,EAAA,QAAA,EACA,OAAAC,GAAAA,EAAA,QAAA,CAAA,EACA,IAAAC,CAAA,CAAA,CACA,CACA,EAGAI,EAAA,CAAA,GAAAT,CAAA,EAAA,OAAAI,GAAA,CAAAA,EAAA,QAAA,CAAA,EAAA,IAAAA,IACA,CACA,OAAAA,EAAA,OACA,YAAAA,EAAA,QAAA,EACA,UAAAA,EAAA,aAAA,EACA,GAAAA,EAAA,KAAA,EACA,OAAAA,EAAA,SAAA,CAAA,EAEA,EAEA,OAAAM,EAAA,KAAA,MAAA,CAAA,UAAA,mDACA,SAAA,CAAAA,EAAAA,KAAA,MAAA,CAAA,UAAA,4GACA,SAAA,CAAAA,EAAAA,KAAA,MAAA,CAAA,UAAA,uDACA,SAAA,CAAAd,GAAA,YAAAe,EAAAA,IAAAC,EAAA,CAAA,YAAA,OAAA,UAAAhB,GAAA,WAAA,GAAA,GAAA,OAAA,EAAA,CAAA,EACAc,EAAAA,KAAA,MAAA,CAAA,UAAA,oDACA,SAAA,CAAAC,EAAA,IAAA,OAAA,CAAA,UAAA,0BAAA,SAAAf,GAAA,YAAA,QACAH,EAAA,CAAA,KAAA,GAAA,OAAA,QAAA,UAAA,sEAAA,CAAA,EACA,CAAA,EACA,EACAkB,EAAAA,IAAAE,EAAA,CAAA,SAAAX,EAAA,MAAAO,CAAA,CAAA,CAAA,EACA,EACAC,EAAAA,KAAA,MAAA,CAAA,UAAA,uBACA,SAAA,CAAAC,EAAAA,IAAA,MAAA,CAAA,UAAA,QACA,CAAA,EACAA,EAAAA,IAAAG,EAAA,CAAA,UAAA,SAAA,SAAA,IAAA,CAAA,EAAA,QAAA,GAAA,QAAA,MAAA,CAAA,EAAA,CAAA,EACA,CACA,CAAA,CAAA,CACA,CAAAnB,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,CAAA,EAAA,YAAA,UAAA","x_google_ignoreList":[0]}